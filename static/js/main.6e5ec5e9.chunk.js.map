{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","day","year","ExpenseItem","date","toLocaleString","getFullYear","title","amount","onClick","onRemoveExpenseItem","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expenseMonth","getMonth","expenseChartValueCalculator","Expenses","useState","Date","toString","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","expenseId","ExpenseForm","toISOString","split","userInput","setUserInput","onSubmit","preventDefault","onSaveExpenseData","type","prevState","min","step","NewExpense","newExpense","setNewExpense","enteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","itemId","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6e5ec5e9.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = props => {\n  const classes = \"card \" + props.className;\n  return (\n    <div className={classes}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import './ExpenseDate.css'\n\nconst ExpenseDate = props => {\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>\n        {props.month}\n      </div>\n      <div className='expense-date__day'>\n        {props.day}\n      </div>\n      <div className='expense-date__year'>\n        {props.year}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;","import \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = props => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  // const [title, setTitle] = useState(props.title);\n\n  // const clickHandler = () => {\n  //   setTitle('updated!');\n  // }\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate month={month} day={day} year={year} />\n      <div className=\"expense-item__description\">\n        <h2>\n          {props.title}\n        </h2>\n        <div className=\"expense-item__price\">\n          ${props.amount}\n        </div>\n        <div className=\"expense-item__button\">\n          <button onClick={props.onRemoveExpenseItem}>X</button>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = props => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\"> No expenses found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map(expense =>\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n          onRemoveExpenseItem={() => props.onRemoveExpenseItem(expense.id)}\n        />\n      )}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import \"./ChartBar.css\";\n\nconst ChartBar = props => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }} />\n      </div>\n      <div className=\"cart-bar__label\">\n        {props.label}\n      </div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map(dataPoint =>\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 }\n  ];\n\n  const expenseChartValueCalculator = expense => {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January\n    chartDataPoints[expenseMonth].value += expense.amount;\n  };\n\n  props.expenses.map(expense => expenseChartValueCalculator(expense));\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = props => {\n  const [filteredYear, setFilteredYear] = useState(\n    new Date().getFullYear().toString()\n  );\n  const onFilterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(\n    expense => expense.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <li>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={onFilterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList\n          items={filteredExpenses}\n          onRemoveExpenseItem={expenseId =>\n            props.onRemoveExpenseItem(expenseId)}\n        />\n      </Card>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import \"./ExpenseForm.css\";\nimport { useState } from \"react\";\n\nconst ExpenseForm = (props) => {\n  //   const [title, settitle] = useState(\"\");\n  //   const [amount, setamount] = useState(\"0.01\");\n  //   const [date, setdate] = useState(\"2019-09-01\");\n\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    amount: \"0.01\",\n    date: new Date().toISOString().split('T')[0]\n  });\n\n  const titleChangeHandler = event => {\n    // settitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   title: event.target.value\n    // });\n    setUserInput(prevState => {\n      return { ...prevState, title: event.target.value };\n    });\n  };\n  const amountChangeHandler = event => {\n    // setamount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   amount: event.target.value\n    // });\n    setUserInput(prevState => {\n      return { ...prevState, amount: event.target.value };\n    });\n  };\n  const dateChangeHandler = event => {\n    // setdate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   date: event.target.value\n    // });\n    setUserInput(prevState => {\n      return { ...prevState, date: event.target.value };\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onSaveExpenseData(userInput);\n    setUserInput({\n      title: \"\",\n      amount: \"0.01\",\n      date: \"2019-09-01\"\n    });\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={userInput.title}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={userInput.amount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-09-01\"\n            max=\"2022-12-31\"\n            value={userInput.date}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = props => {\n  const [newExpense, setNewExpense] = useState(false);\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      date: new Date(enteredExpenseData.date),\n      id: Math.random().toString()\n    };\n\n    props.onAddExpense(expenseData);\n    setNewExpense(false);\n  };\n\n  const addExpenseClickHandler = () => {\n    setNewExpense(true);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {newExpense\n        ? <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n        : <button onClick={addExpenseClickHandler}>Add Expense</button>}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2019, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const onAddExpenseHandler = expenseData => {\n    setExpenses(prevExpenses => {\n      return [expenseData, ...prevExpenses];\n    });\n  };\n\n  const onRemoveExpenseItemHandler = itemId => {\n    setExpenses(prevExpenses => {\n      return [...prevExpenses.filter(expense => expense.id !== itemId)]\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={onAddExpenseHandler} />\n      <Expenses items={expenses} onRemoveExpenseItem={onRemoveExpenseItemHandler}/>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}